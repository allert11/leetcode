#include<iostream>
#include<vector>
using namespace std;

/*
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。
*/

const string letterMap[10] = {
    "",     // 0 
    "",     // 1
    "abc",  // 2
    "def",  // 3
    "ghi",  // 4
    "jkl",  // 5
    "mno",  // 6
    "pqrs", // 7
    "tuv",  // 8
    "wxyz", // 9
};

vector<string> res;
string path;

/*
param: digits -- 输入的数字组合 为string类型
       index  -- 用来记录遍历到数字组合中的哪一个数字了
*/
void backtracking(const string& digits,int index){
    if(index == digits.size()){  // 数字都遍历完的时候 也就是能够存入结果的时候
        res.push_back(path);
        return;
    }
    int digit = digits[index] - '0';
    string letters = letterMap[digit];
    for(int i = 0;i < letters.size();i++){
        path.push_back(letters[i]);
        backtracking(digits,index + 1);
        path.pop_back();
    }
}

int main(){
    string digits;
    cin>>digits;
    backtracking(digits,0);
    auto first = res.begin();
    for(;first != res.end();first++){
        cout<<*first<<endl;
    }
}
